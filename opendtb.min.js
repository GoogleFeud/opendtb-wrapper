const TRIVIA_CATEGORIES={GENERAL:9,BOOKS:10,FILM:11,MUSIC:12,MUSICALS_THEATRES:13,TELEVISION:14,GAMES:15,BOARD_GAMES:16,SCIENCE_NATURE:17,COMPUTERS:18,MATHEMATICS:19,MYTHOLOGY:20,SPORTS:21,GEOGRAPHY:22,HISTORY:23,POLITICS:24,ART:25,CELEBS:26,ANIMALS:27,VEHICLES:28,COMICS:29,SCIENCE_GADGETS:30,ANIME_MANGA:31,CARTOON_ANIMATIONS:32,$has:function(thing){let res=!1;for(let i in this){if(this[i]==thing)res=!0}
return res}}
const TRIVIA_DIFFICULTIES={EASY:'easy',MEDIUM:'medium',HARD:'hard',$has:function(thing){let res=!1;for(let i in this){if(this[i]==thing)res=!0}
return res}}
const TRIVIA_TYPES={MULTIPLE:'multiple',BOOLEAN:'boolean',$has:function(thing){let res=!1;for(let i in this){if(this[i]==thing)res=!0}
return res}}
class Trivia_Question{constructor(data){this.content=data.question;this.type=data.type;this.difficulty=data.difficulty;this.Dcontent=data.question;this.category=data.category;this.correct=data.correct_answer;this.incorrect=data.incorrect_answers;this.answers=[...this.incorrect,this.correct];this.id=Trivia_Question.makeid(8)}
static makeid(length){var text="";var possible="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(var i=0;i<length;i++)
text+=possible.charAt(Math.floor(Math.random()*possible.length));return text}}
class Trivia_BooleanQuestion extends Trivia_Question{constructor(data){super(data);this.incorrect=this.incorrect[0]}}
class Trivia_MultipleQuestion extends Trivia_Question{constructor(data){super(data);this.shuffle()}
shuffle(){for(let i=this.answers.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[this.answers[i],this.answers[j]]=[this.answers[j],this.answers[i]]}
this.optionA=this.answers[0];this.optionB=this.answers[1];this.optionC=this.answers[2];this.optionD=this.answers[3];this.correctOption=correctL(this.answers,this.correct)}}
function correctL(array,right){if(array[0]==right)return"A";if(array[1]==right)return"B";if(array[2]==right)return"C";if(array[3]==right)return"D"}
class Client{constructor(options={token:!0,noInactivity:!1,cache:!0}){if(options.token){(async()=>{await this.setToken()})()}
if(options.cache)this.cache=new Map();if(options.noInactivity){this.resetLoop=setInterval(async()=>{await this.resetToken()},21600000)}}
async setToken(){if(this.token)return;const t=await Client.getToken();this.token=t;return this}
async fetchQuestion(options={category:null,difficulty:null,type:null}){Client.buildArgs(this,options);const data=await fetch(`https://opentdb.com/api.php?amount=1${options.category}${options.difficulty}${options.type}${options.token}`);let question=await data.json();if(question.response_code!=0)return null;question=question.results[0];if(question.type=='multiple')question=new Trivia_MultipleQuestion(question);else question=new Trivia_BooleanQuestion(question)
if(this.cache)this.cache.set(question.id,question);return question}
async fetchQuestions(options={category:null,difficulty:null,type:null,amount:2}){Client.buildArgs(this,options);console.log(`https://opentdb.com/api.php?amount=${options.amount}${options.category}${options.difficulty}${options.type}${options.token}`);const data=await fetch(`https://opentdb.com/api.php?amount=${options.amount}${options.category}${options.difficulty}${options.type}${options.token}`);let question=await data.json();if(question.response_code!=0)return null;const questions=[];const res=question.results;for(let i=0;i<res.length;i++){question=res[i];if(question.type=='multiple')question=new Trivia_MultipleQuestion(question);else question=new Trivia_BooleanQuestion(question)
if(this.cache)this.cache.set(question.id,question);questions.push(question)}
return questions}
find(fn){if(!this.cache)return null;let res=null;this.cache.forEach((v,key,that)=>{if(fn(v,key,that)&&!res)res=v});return res}
async resetToken(){if(!this.token)return!1;const data=await fetch(`https://opentdb.com/api_token.php?command=reset&token=${this.token}`);const token=await data.json();if(token.response_code!=0)return!1;else return!0}
static async getToken(){const data=await fetch("https://opentdb.com/api_token.php?command=request")
const token=await data.json();if(token.response_code!=0)throw `Response code: ${token.response_code}: ${token.response_message}`
return token.token}
static buildArgs(inst,info){(info.category)?(TRIVIA_CATEGORIES.$has(info.category))?info.category=`&category=${info.category}`:info.category="":info.category="";(info.difficulty)?(TRIVIA_DIFFICULTIES.$has(info.difficulty))?info.difficulty=`&difficulty=${info.difficulty}`:info.difficulty="":info.difficulty="";(info.type)?(TRIVIA_TYPES.$has(info.type))?info.type=`&type=${info.type}`:info.type="":info.type="";(inst.token)?info.token=`&token=${inst.token}`:info.token="";if(info.amount){if(info.amount<1)info.amount=2}else info.amount=2}
static async questionCount(category){if(!category||TRIVIA_CATEGORIES.$has(category))return 0;const data=await fetch(`https://opentdb.com/api_count.php?category=${category}`);const info=await data.json();return{total:info.category_question_count.total_question_count,easy:info.category_question_count.total_easy_question_count,medium:info.category_question_count.total_medium_question_count,hard:info.category_question_count.total_hard_question_count}}}